<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[kiya's pigsty]]></title>
  <subtitle><![CDATA[No Further Delay!]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://kiya-z.github.io/"/>
  <updated>2015-11-18T09:07:14.510Z</updated>
  <id>http://kiya-z.github.io/</id>
  
  <author>
    <name><![CDATA[Kiya]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[解析 dex 文件结构 - map_list]]></title>
    <link href="http://kiya-z.github.io/2015/11/18/parse-dex-file-part-map-list/"/>
    <id>http://kiya-z.github.io/2015/11/18/parse-dex-file-part-map-list/</id>
    <published>2015-11-18T09:06:28.000Z</published>
    <updated>2015-11-18T09:07:14.510Z</updated>
    <content type="html"><![CDATA[<h2 id="什么是_map_list？">什么是 map_list？</h2><p>整个 dex 文件的内容清单，位于数据段内，其文件偏移由 DexHeader 中的 mapOff 字段指定。</p>
<a id="more"></a>
<p>更加具体的解释在下面的 type 段落部分。</p>
<hr>
<h2 id="结构">结构</h2><p>来到 mapOff 指定的偏移处，首先是 DexMapList 结构，存储了 map_list 内 map_item (DexMapItem) 的个数和内容，也就是说在 size 之后，有 size 个DexMapItem 类型的数据。</p>
<h3 id="DexMapList">DexMapList</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> Direct-mapped <span class="string">"map_list"</span>.</span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">struct DexMapList &#123;</span><br><span class="line">    u4  size;               /<span class="keyword">*</span> DexMapItem 的个数 <span class="keyword">*</span>/</span><br><span class="line">    DexMapItem list[1];     /<span class="keyword">*</span> DexMapItem 数组 <span class="keyword">*</span>/</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="DexMapItem">DexMapItem</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> Direct-mapped <span class="string">"map_item"</span>.</span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">struct DexMapItem &#123;</span><br><span class="line">    u2 type;              /<span class="keyword">*</span> 各 item 的类型，均以 kDexType 开头<span class="keyword">*</span>/</span><br><span class="line">    u2 unused;            /<span class="keyword">*</span> 未使用，用于字节对齐 <span class="keyword">*</span>/</span><br><span class="line">    u4 size;              /<span class="keyword">*</span> 指定类型的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4 offset;            /<span class="keyword">*</span> 指定类型数据的起始文件偏移 <span class="keyword">*</span>/</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="type">type</h3><p>在这些类型中，除了 0x0000 表示的就是 DexHeader 本身之外，0x0001 ~ 0x1000 部分与 DexHeader 中定义的类型是一致的；<br>而 0x1001 ~ 0x2006 部分是对 data 段的细分。<br>这样设计可以作为一种文件检验方式，一旦和 DexHeader 的数据有所不同就可以判定该 dex 是损坏的；而且 map_list 部分的内容更详细，以此作为整个文件的索引想必是极好的。<br>下面手动查找的例子可以证明。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* map item type codes */</span></span><br><span class="line"><span class="keyword">enum</span> &#123;</span><br><span class="line">    kDexTypeHeaderItem               = <span class="number">0x0000</span>,</span><br><span class="line">    kDexTypeStringIdItem             = <span class="number">0x0001</span>,</span><br><span class="line">    kDexTypeTypeIdItem               = <span class="number">0x0002</span>,</span><br><span class="line">    kDexTypeProtoIdItem              = <span class="number">0x0003</span>,</span><br><span class="line">    kDexTypeFieldIdItem              = <span class="number">0x0004</span>,</span><br><span class="line">    kDexTypeMethodIdItem             = <span class="number">0x0005</span>,</span><br><span class="line">    kDexTypeClassDefItem             = <span class="number">0x0006</span>,</span><br><span class="line">    kDexTypeMapList                  = <span class="number">0x1000</span>,</span><br><span class="line">    kDexTypeTypeList                 = <span class="number">0x1001</span>,</span><br><span class="line">    kDexTypeAnnotationSetRefList     = <span class="number">0x1002</span>,</span><br><span class="line">    kDexTypeAnnotationSetItem        = <span class="number">0x1003</span>,</span><br><span class="line">    kDexTypeClassDataItem            = <span class="number">0x2000</span>,</span><br><span class="line">    kDexTypeCodeItem                 = <span class="number">0x2001</span>,</span><br><span class="line">    kDexTypeStringDataItem           = <span class="number">0x2002</span>,</span><br><span class="line">    kDexTypeDebugInfoItem            = <span class="number">0x2003</span>,</span><br><span class="line">    kDexTypeAnnotationItem           = <span class="number">0x2004</span>,</span><br><span class="line">    kDexTypeEncodedArrayItem         = <span class="number">0x2005</span>,</span><br><span class="line">    kDexTypeAnnotationsDirectoryItem = <span class="number">0x2006</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="手工查找">手工查找</h2><p><strong>某 dex 文件的 map_list 部分</strong>：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00001000</span>  <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |................|</span><br><span class="line"><span class="number">00001010</span>  <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">5</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">70</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |....\...p.......|</span><br><span class="line"><span class="number">00001020</span>  <span class="number">19</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> e0 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">03</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">12</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |................|</span><br><span class="line"><span class="number">00001030</span>  <span class="number">44</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">1</span>c <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>  |D...............|</span><br><span class="line"><span class="number">00001040</span>  <span class="number">05</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">2</span>b <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">24</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span> <span class="number">06</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |....+...$.......|</span><br><span class="line"><span class="number">00001050</span>  <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">7</span>c <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">02</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">5</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |....|.... ..\...|</span><br><span class="line"><span class="number">00001060</span>  bc <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">10</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">0</span>a <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> f8 <span class="number">09</span> <span class="number">00</span> <span class="number">00</span>  |................|</span><br><span class="line"><span class="number">00001070</span>  <span class="number">04</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">4</span>e <span class="number">0</span>a <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">10</span> <span class="number">00</span> <span class="number">00</span>  |. ......N.......|</span><br><span class="line"><span class="number">00001080</span>  <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">58</span> <span class="number">0</span>a <span class="number">00</span> <span class="number">00</span>  <span class="number">06</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |....X.... ......|</span><br><span class="line"><span class="number">00001090</span>  <span class="number">64</span> <span class="number">0</span>a <span class="number">00</span> <span class="number">00</span> <span class="number">03</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">09</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">7</span>c <span class="number">0</span>a <span class="number">00</span> <span class="number">00</span>  |d.... ......|...|</span><br><span class="line"><span class="number">000010</span>a0  <span class="number">01</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">10</span> <span class="number">0</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">20</span> <span class="number">00</span> <span class="number">00</span>  |. ........... ..|</span><br><span class="line"><span class="number">000010</span>b0  <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> c2 <span class="number">0f</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">00</span> <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |................|</span><br><span class="line"><span class="number">000010</span>c0  <span class="number">00</span> <span class="number">10</span> <span class="number">00</span> <span class="number">00</span>                                       |....|</span><br></pre></td></tr></table></figure>
<p>前 4 字节表明接下来会有 <code>0x00000010</code> 个 DexMapItem 结构；</p>
<table>
<thead>
<tr>
<th>序数</th>
<th>binary</th>
<th>type</th>
<th>size</th>
<th>offset</th>
</tr>
</thead>
<tbody>
<tr>
<td>0x01</td>
<td>00 00 00 00  01 00 00 00  00 00 00 00</td>
<td>kDexTypeHeaderItem</td>
<td>0x01</td>
<td>0x0</td>
</tr>
<tr>
<td>0x02</td>
<td>01 00 00 00  5c 00 00 00  70 00 00 00</td>
<td>kDexTypeStringIdItem</td>
<td>0x5c</td>
<td>0x70</td>
</tr>
<tr>
<td>0x03</td>
<td>02 00 00 00  19 00 00 00  e0 01 00 00</td>
<td>kDexTypeTypeIdItem</td>
<td>0x19</td>
<td>0x1e0</td>
</tr>
<tr>
<td>0x04</td>
<td>03 00 00 00  12 00 00 00  44 02 00 00</td>
<td>kDexTypeProtoIdItem</td>
<td>0x12</td>
<td>0x244</td>
</tr>
<tr>
<td>0x05</td>
<td>04 00 00 00  01 00 00 00  1c 03 00 00</td>
<td>kDexTypeFieldIdItem</td>
<td>0x01</td>
<td>0x3c1</td>
</tr>
<tr>
<td>0x06</td>
<td>05 00 00 00  2b 00 00 00  24 03 00 00</td>
<td>kDexTypeMethodIdItem</td>
<td>0x2b</td>
<td>0x324</td>
</tr>
<tr>
<td>0x07</td>
<td>06 00 00 00  02 00 00 00  7c 04 00 00</td>
<td>kDexTypeClassDefItem</td>
<td>0x02</td>
<td>0x47c</td>
</tr>
<tr>
<td>0x08</td>
<td>02 20 00 00  5c 00 00 00  bc 04 00 00</td>
<td>kDexTypeStringDataItem</td>
<td>0x5c</td>
<td>0x4bc</td>
</tr>
<tr>
<td>0x09</td>
<td>01 10 00 00  0a 00 00 00  f8 09 00 00</td>
<td>kDexTypeTypeList</td>
<td>0x0a</td>
<td>0x9f8</td>
</tr>
<tr>
<td>0x0a</td>
<td>04 20 00 00  01 00 00 00  4e 0a 00 00</td>
<td>kDexTypeAnnotationItem</td>
<td>0x01</td>
<td>0xa4e</td>
</tr>
<tr>
<td>0x0b</td>
<td>03 10 00 00  02 00 00 00  58 0a 00 00</td>
<td>kDexTypeAnnotationSetItem</td>
<td>0x02</td>
<td>0xa58</td>
</tr>
<tr>
<td>0x0c</td>
<td>06 20 00 00  01 00 00 00  64 0a 00 00</td>
<td>kDexTypeAnnotationsDirectoryItem</td>
<td>0x01</td>
<td>0xa64</td>
</tr>
<tr>
<td>0x0d</td>
<td>03 20 00 00  09 00 00 00  7c 0a 00 00</td>
<td>kDexTypeDebugInfoItem</td>
<td>0x09</td>
<td>0xa7c</td>
</tr>
<tr>
<td>0x0e</td>
<td>01 20 00 00  09 00 00 00  10 0c 00 00</td>
<td>kDexTypeCodeItem</td>
<td>0x09</td>
<td>0xc10</td>
</tr>
<tr>
<td>0x0f</td>
<td>00 20 00 00  02 00 00 00  c2 0f 00 00</td>
<td>kDexTypeClassDataItem</td>
<td>0x02</td>
<td>0xfc2</td>
</tr>
<tr>
<td>0x10</td>
<td>00 10 00 00  01 00 00 00  00 10 00 00</td>
<td>kDexTypeMapList</td>
<td>0x01</td>
<td>0x1000</td>
</tr>
</tbody>
</table>
<p>这里的各项值可以和上一节 <a href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/">解析 dex 文件结构 - DexHeader</a> 手动查找部分中的数据进行比对，发现是相同的。</p>
<hr>
<h2 id="写程序解析_map_list">写程序解析 map_list</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DexStruct</span><span class="params">(object)</span>:</span></span><br><span class="line">    DexHeader = &#123;&#125;    <span class="comment"># 实现在上一节</span></span><br><span class="line"></span><br><span class="line">    DexMapList = &#123;</span><br><span class="line">        <span class="string">"size"</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="string">"DexMapItem"</span>: []</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># DexMapItem = &#123;</span></span><br><span class="line">    <span class="comment">#     "type" : 0</span></span><br><span class="line">    <span class="comment">#     "unused" : 0</span></span><br><span class="line">    <span class="comment">#     "size"  : 0</span></span><br><span class="line">    <span class="comment">#     "offset" : 0</span></span><br><span class="line">    <span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line">    DexMapItemCode = &#123;</span><br><span class="line">        <span class="number">0x0000</span> : <span class="string">"kDexTypeHeaderItem"</span>               ,</span><br><span class="line">        <span class="number">0x0001</span> : <span class="string">"kDexTypeStringIdItem"</span>             ,</span><br><span class="line">        <span class="number">0x0002</span> : <span class="string">"kDexTypeTypeIdItem"</span>               ,</span><br><span class="line">        <span class="number">0x0003</span> : <span class="string">"kDexTypeProtoIdItem"</span>              ,</span><br><span class="line">        <span class="number">0x0004</span> : <span class="string">"kDexTypeFieldIdItem"</span>              ,</span><br><span class="line">        <span class="number">0x0005</span> : <span class="string">"kDexTypeMethodIdItem"</span>             ,</span><br><span class="line">        <span class="number">0x0006</span> : <span class="string">"kDexTypeClassDefItem"</span>             ,</span><br><span class="line">        <span class="number">0x1000</span> : <span class="string">"kDexTypeMapList"</span>                  ,</span><br><span class="line">        <span class="number">0x1001</span> : <span class="string">"kDexTypeTypeList"</span>                 ,</span><br><span class="line">        <span class="number">0x1002</span> : <span class="string">"kDexTypeAnnotationSetRefList"</span>     ,</span><br><span class="line">        <span class="number">0x1003</span> : <span class="string">"kDexTypeAnnotationSetItem"</span>        ,</span><br><span class="line">        <span class="number">0x2000</span> : <span class="string">"kDexTypeClassDataItem"</span>            ,</span><br><span class="line">        <span class="number">0x2001</span> : <span class="string">"kDexTypeCodeItem"</span>                 ,</span><br><span class="line">        <span class="number">0x2002</span> : <span class="string">"kDexTypeStringDataItem"</span>           ,</span><br><span class="line">        <span class="number">0x2003</span> : <span class="string">"kDexTypeDebugInfoItem"</span>            ,</span><br><span class="line">        <span class="number">0x2004</span> : <span class="string">"kDexTypeAnnotationItem"</span>           ,</span><br><span class="line">        <span class="number">0x2005</span> : <span class="string">"kDexTypeEncodedArrayItem"</span>         ,</span><br><span class="line">        <span class="number">0x2006</span> : <span class="string">"kDexTypeAnnotationsDirectoryItem"</span> ,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseHeader</span><span class="params">(header_data)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span>    <span class="comment"># 实现在上一节</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parseMapList</span><span class="params">(map_data)</span>:</span></span><br><span class="line">    DexStruct.DexMapList[<span class="string">'size'</span>] = struct.unpack(<span class="string">'H'</span>,map_data[:<span class="number">2</span>])[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    curPos = <span class="number">4</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(DexStruct.DexMapList[<span class="string">'size'</span>]):</span><br><span class="line">        tmpDexMapItem = &#123;</span><br><span class="line">            <span class="string">"type"</span> : struct.unpack(<span class="string">'H'</span>,map_data[curPos:curPos+<span class="number">2</span>])[<span class="number">0</span>],</span><br><span class="line">            <span class="string">"unused"</span> : <span class="number">0</span>,</span><br><span class="line">            <span class="string">"size"</span>  : struct.unpack(<span class="string">'I'</span>,map_data[curPos+<span class="number">4</span>:curPos+<span class="number">8</span>])[<span class="number">0</span>],</span><br><span class="line">            <span class="string">"offset"</span> : struct.unpack(<span class="string">'I'</span>,map_data[curPos+<span class="number">8</span>:curPos+<span class="number">12</span>])[<span class="number">0</span>] &#125;</span><br><span class="line">        curPos += <span class="number">12</span></span><br><span class="line">        DexStruct.DexMapList[<span class="string">"DexMapItem"</span>].append(tmpDexMapItem)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"classes.dex"</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        parseHeader(f.read(<span class="number">0x70</span>))</span><br><span class="line">        f.seek(DexStruct.DexHeader[<span class="string">'mapOff'</span>])</span><br><span class="line">        parseMapList(f.read())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'type                 size            offset'</span></span><br><span class="line">        l = len(DexStruct.DexMapList[<span class="string">'DexMapItem'</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(l):</span><br><span class="line">            <span class="keyword">print</span> DexStruct.DexMapItemCode[DexStruct.DexMapList[<span class="string">'DexMapItem'</span>][i][<span class="string">'type'</span>]],</span><br><span class="line">            <span class="keyword">print</span> hex(DexStruct.DexMapList[<span class="string">'DexMapItem'</span>][i][<span class="string">'size'</span>]),</span><br><span class="line">            <span class="keyword">print</span> hex(DexStruct.DexMapList[<span class="string">'DexMapItem'</span>][i][<span class="string">'offset'</span>])</span><br></pre></td></tr></table></figure>
<h3 id="Reference">Reference</h3><p><a href="http://www.ituring.com.cn/book/1131" target="_blank" rel="external">《Android 软件安全与逆向分析》</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="什么是_map_list？">什么是 map_list？</h2><p>整个 dex 文件的内容清单，位于数据段内，其文件偏移由 DexHeader 中的 mapOff 字段指定。</p>]]>
    
    </summary>
    
      <category term="Android 安全" scheme="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/"/>
    
      <category term="dex" scheme="http://kiya-z.github.io/tags/dex/"/>
    
      <category term="Android" scheme="http://kiya-z.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[解析 dex 文件结构 - DexHeader]]></title>
    <link href="http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/"/>
    <id>http://kiya-z.github.io/2015/11/17/parse-dex-file-part-dex-header/</id>
    <published>2015-11-17T14:32:58.000Z</published>
    <updated>2015-11-18T09:11:01.578Z</updated>
    <content type="html"><![CDATA[<h3 id="dex_简介">dex 简介</h3><p>dex 文件是 dalvik 虚拟机的可执行文件。</p>
<a id="more"></a>
<hr>
<h3 id="dex_文件结构">dex 文件结构</h3><p>该结构位于系统源码 <code>dalvik\libdex\DexFile.h</code> 中，描述的是 dex 文件被映射到内存中的结构。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> Structure representing a DEX file.</span><br><span class="line"> <span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> Code should regard DexFile as opaque, using the API calls provided here</span><br><span class="line"> <span class="keyword">*</span> to access specific structures.</span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">struct DexFile &#123;</span><br><span class="line">    /<span class="keyword">*</span> directly-mapped <span class="string">"opt"</span> header <span class="keyword">*</span>/</span><br><span class="line">    const DexOptHeader<span class="keyword">*</span> pOptHeader;</span><br><span class="line"></span><br><span class="line">    /<span class="keyword">*</span> pointers to directly-mapped structs and arrays in base DEX <span class="keyword">*</span>/</span><br><span class="line">    const DexHeader<span class="keyword">*</span>    pHeader;</span><br><span class="line">    const DexStringId<span class="keyword">*</span>  pStringIds;</span><br><span class="line">    const DexTypeId<span class="keyword">*</span>    pTypeIds;</span><br><span class="line">    const DexFieldId<span class="keyword">*</span>   pFieldIds;</span><br><span class="line">    const DexMethodId<span class="keyword">*</span>  pMethodIds;</span><br><span class="line">    const DexProtoId<span class="keyword">*</span>   pProtoIds;</span><br><span class="line">    const DexClassDef<span class="keyword">*</span>  pClassDefs;</span><br><span class="line">    const DexLink<span class="keyword">*</span>      pLinkData;</span><br><span class="line"></span><br><span class="line">    /<span class="keyword">*</span></span><br><span class="line">     <span class="keyword">*</span> These are mapped out of the <span class="string">"auxillary"</span> section, and may not be</span><br><span class="line">     <span class="keyword">*</span> included in the file.</span><br><span class="line">     <span class="keyword">*</span>/</span><br><span class="line">    const DexClassLookup<span class="keyword">*</span> pClassLookup;</span><br><span class="line">    const void<span class="keyword">*</span>         pRegisterMapPool;       // RegisterMapClassPool</span><br><span class="line"></span><br><span class="line">    /<span class="keyword">*</span> points to start of DEX file data <span class="keyword">*</span>/</span><br><span class="line">    const u1<span class="keyword">*</span>           baseAddr;</span><br><span class="line"></span><br><span class="line">    /<span class="keyword">*</span> track memory overhead for auxillary structures <span class="keyword">*</span>/</span><br><span class="line">    int                 overhead;</span><br><span class="line"></span><br><span class="line">    /<span class="keyword">*</span> additional app-specific data structures associated with the DEX <span class="keyword">*</span>/</span><br><span class="line">    //void<span class="keyword">*</span>               auxData;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>基本的文件结构只需关注:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">struct DexFile&#123;</span><br><span class="line">    DexHeader    Header<span class="comment">;</span></span><br><span class="line">    DexStringId  StringIds[stringIdsSize]<span class="comment">;</span></span><br><span class="line">    DexTypeId    TypeIds[typeIdsSize]<span class="comment">;</span></span><br><span class="line">    DexFieldId   FieldIds[fieldIdsSize]<span class="comment">;</span></span><br><span class="line">    DexMethodId  MethodIds[methodIdsSize]<span class="comment">;</span></span><br><span class="line">    DexProtoId   ProtoIds[protoIdsSize]<span class="comment">;</span></span><br><span class="line">    DexClassDef  ClassDefs[classDefsSize]<span class="comment">;</span></span><br><span class="line">    DexData      Data[]<span class="comment">;</span></span><br><span class="line">    DexLink      LinkData<span class="comment">;</span></span><br><span class="line">&#125;<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="大体结构图">大体结构图</h4><p><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dex-file-general-structure.png" alt="dex-file-general-structure"></p>
<hr>
<h3 id="DexHeader_结构">DexHeader 结构</h3><p>头部记录了整个文件的索引。</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> 160-bit SHA-1 digest.</span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">enum &#123; kSHA1DigestLen = 20,</span><br><span class="line">       kSHA1DigestOutputLen = kSHA1DigestLen<span class="keyword">*</span>2 +1 &#125;;</span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> Direct-mapped <span class="string">"header_item"</span> struct.</span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">struct DexHeader &#123;</span><br><span class="line">    u1  magic[8];           /<span class="keyword">*</span> 版本标识 <span class="keyword">*</span>/</span><br><span class="line">    u4  checksum;           /<span class="keyword">*</span> adler32 检验 <span class="keyword">*</span>/</span><br><span class="line">    u1  signature[kSHA1DigestLen]; /<span class="keyword">*</span> SHA-1 哈希值 <span class="keyword">*</span>/</span><br><span class="line">    u4  fileSize;           /<span class="keyword">*</span> 整个文件大小 <span class="keyword">*</span>/</span><br><span class="line">    u4  headerSize;         /<span class="keyword">*</span> DexHeader 大小 <span class="keyword">*</span>/</span><br><span class="line">    u4  endianTag;          /<span class="keyword">*</span> 字节序标记 <span class="keyword">*</span>/</span><br><span class="line">    u4  linkSize;           /<span class="keyword">*</span> 链接段大小 <span class="keyword">*</span>/</span><br><span class="line">    u4  linkOff;            /<span class="keyword">*</span> 链接段偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  mapOff;             /<span class="keyword">*</span> DexMapList 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  stringIdsSize;      /<span class="keyword">*</span> DexStringId 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  stringIdsOff;       /<span class="keyword">*</span> DexStringId 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  typeIdsSize;        /<span class="keyword">*</span> DexTypeId 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  typeIdsOff;         /<span class="keyword">*</span> DexTypeId 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  protoIdsSize;       /<span class="keyword">*</span> DexProtoId 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  protoIdsOff;        /<span class="keyword">*</span> DexProtoId 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  fieldIdsSize;       /<span class="keyword">*</span> DexFieldId 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  fieldIdsOff;        /<span class="keyword">*</span> DexFieldId 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  methodIdsSize;      /<span class="keyword">*</span> DexMethodId 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  methodIdsOff;       /<span class="keyword">*</span> DexMethodId 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  classDefsSize;      /<span class="keyword">*</span> DexClassDef 的个数 <span class="keyword">*</span>/</span><br><span class="line">    u4  classDefsOff;       /<span class="keyword">*</span> DexClassDef 的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">    u4  dataSize;           /<span class="keyword">*</span> 数据段的大小 <span class="keyword">*</span>/</span><br><span class="line">    u4  dataOff;            /<span class="keyword">*</span> 数据段的文件偏移 <span class="keyword">*</span>/</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="其中：">其中：</h4><table>
<thead>
<tr>
<th>field</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>magic</strong></td>
<td>dex文件标识，值必须为常量 <code>DEX_FILE_MAGIC</code> = { 0x64 0x65 0x78 0x0a 0x30 0x33 0x35 0x00 } = “dex\n035\0”</td>
</tr>
<tr>
<td><strong>checkSum</strong></td>
<td>对除 magic 和 checkSum 外的剩余文件计算 adler32 校验值，目的是检测文件是否损坏</td>
</tr>
<tr>
<td><strong> signature</strong></td>
<td>对除 magic、checkSum 和 signature 外的剩余文件计算 SHA-1 校验值，用来确定文件的唯一性</td>
</tr>
<tr>
<td><strong> fileSize</strong></td>
<td>以字节为单位，整个文件（包括头部）的大小</td>
</tr>
<tr>
<td><strong> headerSize</strong></td>
<td>头部大小，0x70 字节，已经考虑到兼容性</td>
</tr>
<tr>
<td><strong> endianTag</strong></td>
<td>两种字节序取值: <code>uint ENDIAN_CONSTANT = 0x12345678</code> ; <code>uint REVERSE_ENDIAN_CONSTANT = 0x78563412</code></td>
</tr>
<tr>
<td><strong> linkSize</strong></td>
<td>链接段的大小，如果没有使用静态链接，值为0</td>
</tr>
<tr>
<td><strong> linkOff</strong></td>
<td>链接段的文件偏移，指向链接数据段内，如果 <code>linkSize</code> 为 0，则为 0</td>
</tr>
<tr>
<td><strong> mapOff</strong></td>
<td>map item 的文件偏移，指向数据段内，数据结构为 <code>mapList</code>，如果没有 map，值为 0</td>
</tr>
<tr>
<td><strong> stringIdsSize</strong></td>
<td>字符串 id 的个数</td>
</tr>
<tr>
<td><strong> stringIdsOff</strong></td>
<td>字符串 id 清单的文件偏移，指向 <code>stringIds</code> 的起始地址，如果 stringIdsSize 为 0，值为0</td>
</tr>
<tr>
<td><strong> typeIdsSize</strong></td>
<td>类型标识符的个数</td>
</tr>
<tr>
<td><strong> typeIdsOff</strong></td>
<td>类型标识符清单的文件偏移，指向 <code>typeIds</code> 的起始地址，如果 typeIdsSize 为 0，值为 0 (<em>这就很奇怪了哟</em>)</td>
</tr>
<tr>
<td><strong> protoIdsSize</strong></td>
<td>原型标识符的个数</td>
</tr>
<tr>
<td><strong> protoIdsOff</strong></td>
<td>原型标识符清单的文件偏移，指向 <code>protoIds</code> 的起始地址，如果 protoIdsSize 为 0，值为 0 (<em>这就很奇怪了哟</em>)</td>
</tr>
<tr>
<td><strong>  fieldIdsSize</strong></td>
<td>字段标识符的个数</td>
</tr>
<tr>
<td><strong> fieldIdsOff</strong></td>
<td>字段标识符清单的文件偏移，指向 <code>fieldIds</code> 的起始地址，如果 fieldIdsSize 为 0，值为 0</td>
</tr>
<tr>
<td><strong> methodIdsSize</strong></td>
<td>方法标识符的个数</td>
</tr>
<tr>
<td><strong> methodIdsOff</strong></td>
<td>方法标识符清单的文件偏移，指向 <code>methodIds</code> 的起始地址，如果 methodIdsSize 为 0，值为 0</td>
</tr>
<tr>
<td><strong> classDefsSize</strong></td>
<td>类的个数</td>
</tr>
<tr>
<td><strong> classDefsOff</strong></td>
<td>类清单的文件偏移，指向 <code>classDefs</code> 的起始地址，如果 classDefsSize 为 0，值为 0 (<em>这就很奇怪了哟</em>)</td>
</tr>
<tr>
<td><strong> dataSize</strong></td>
<td>数据段的大小，以字节为单位，并且是 sizeof(uint) 的偶数倍</td>
</tr>
<tr>
<td><strong> dataOff</strong></td>
<td>数据段的文件偏移</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="手工查找">手工查找</h3><p>linux 下可以使用 <code>hexdump</code> 查看某文件的二进制数据 -&gt; <code>hexdump -C classes.dex</code></p>
<p><a href="http://archive.oreilly.com/linux/cmd/cmd.csp?path=h/hexdump" target="_blank" rel="external">常用选项</a></p>
<table>
<thead>
<tr>
<th>option</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>-b</td>
<td>将每个字节显示为8进制</td>
</tr>
<tr>
<td>-c</td>
<td>将每个字节显示为ASCII字符</td>
</tr>
<tr>
<td>-C</td>
<td>每个字节显示为16进制和相应的ASCII字符</td>
</tr>
<tr>
<td>-d</td>
<td>每两个字节显示为10进制</td>
</tr>
<tr>
<td>-o</td>
<td>每两个字节显示为8进制</td>
</tr>
<tr>
<td>-x</td>
<td>每两个字节显示为16进制</td>
</tr>
</tbody>
</table>
<p><strong>某 dex 文件的头部：</strong></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">00000000</span>  <span class="number">64</span> <span class="number">65</span> <span class="number">78</span> <span class="number">0</span>a <span class="number">30</span> <span class="number">33</span> <span class="number">35</span> <span class="number">00</span>  <span class="number">3</span>b ba fe c3 <span class="number">83</span> <span class="number">7</span>e aa be  |dex<span class="number">.035</span>.;....~..|</span><br><span class="line"><span class="number">00000010</span>  <span class="number">09</span> <span class="number">97</span> <span class="number">71</span> <span class="number">1</span>e <span class="number">17</span> <span class="number">96</span> <span class="number">9f</span> e9  <span class="number">0</span>c bd <span class="number">01</span> <span class="number">60</span> b4 <span class="number">2</span>a <span class="number">1</span>a c9  |..q........`.*..|</span><br><span class="line"><span class="number">00000020</span>  c4 <span class="number">10</span> <span class="number">00</span> <span class="number">00</span> <span class="number">70</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">78</span> <span class="number">56</span> <span class="number">34</span> <span class="number">12</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |....p...xV4.....|</span><br><span class="line"><span class="number">00000030</span>  <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">10</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">5</span>c <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">70</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span>  |........\...p...|</span><br><span class="line"><span class="number">00000040</span>  <span class="number">19</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> e0 <span class="number">01</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">12</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">44</span> <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>  |............D...|</span><br><span class="line"><span class="number">00000050</span>  <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">1</span>c <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">2</span>b <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">24</span> <span class="number">03</span> <span class="number">00</span> <span class="number">00</span>  |........+...$...|</span><br><span class="line"><span class="number">00000060</span>  <span class="number">02</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">7</span>c <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>  <span class="number">08</span> <span class="number">0</span>c <span class="number">00</span> <span class="number">00</span> bc <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>  |....|...........|</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>binary</th>
<th>field</th>
</tr>
</thead>
<tbody>
<tr>
<td>64 65 78 0a 30 33 35 00</td>
<td>magic</td>
</tr>
<tr>
<td>3b ba fe c3</td>
<td>checksum</td>
</tr>
<tr>
<td>83 7e aa be 09 97 71 1e 17 96 9f e9 0c bd 01 60 b4 2a 1a c9</td>
<td>signature</td>
</tr>
<tr>
<td>c4 10 00 00</td>
<td>fileSize</td>
</tr>
<tr>
<td>70 00 00 00</td>
<td>headerSize</td>
</tr>
<tr>
<td>78 56 34 12</td>
<td>endianTag</td>
</tr>
<tr>
<td>00 00 00 00</td>
<td>linkSize</td>
</tr>
<tr>
<td>00 00 00 00</td>
<td>linkOff</td>
</tr>
<tr>
<td>00 10 00 00</td>
<td>mapOff</td>
</tr>
<tr>
<td>5c 00 00 00</td>
<td>stringIdsSize</td>
</tr>
<tr>
<td>70 00 00 00</td>
<td>stringIdsOff</td>
</tr>
<tr>
<td>19 00 00 00</td>
<td>typeIdsSize</td>
</tr>
<tr>
<td>e0 01 00 00</td>
<td>typeIdsOff</td>
</tr>
<tr>
<td>12 00 00 00</td>
<td>protoIdsSize</td>
</tr>
<tr>
<td>44 02 00 00</td>
<td>protoIdsOff</td>
</tr>
<tr>
<td>01 00 00 00</td>
<td>fieldIdsSize</td>
</tr>
<tr>
<td>1c 03 00 00</td>
<td>fieldIdsOff</td>
</tr>
<tr>
<td>2b 00 00 00</td>
<td>methodIdsSize</td>
</tr>
<tr>
<td>24 03 00 00</td>
<td>methodIdsOff</td>
</tr>
<tr>
<td>02 00 00 00</td>
<td>classDefsSize</td>
</tr>
<tr>
<td>7c 04 00 00</td>
<td>classDefsOff</td>
</tr>
<tr>
<td>08 0c 00 00</td>
<td>dataSize</td>
</tr>
<tr>
<td>bc 04 00 00</td>
<td>dataOff</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="写程序解析_DexHeader">写程序解析 DexHeader</h3><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="atom">import</span> <span class="atom">struct</span></span><br><span class="line"></span><br><span class="line"><span class="atom">class</span> <span class="name">DexStruct</span>(<span class="atom">object</span>):</span><br><span class="line">    <span class="name">DexHeader</span> = &#123;</span><br><span class="line">          <span class="string">"magic"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"checkSum"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">'signature'</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">'fileSize'</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"headerSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"endianTag"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"linkSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"linkOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"mapOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"stringIdsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"stringIdsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"typeIdsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"typeIdsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"protoIdsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"protoIdsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"fieldIdsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"fieldIdsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"methodIdsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"methodIdsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"classDefsSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"classDefsOff"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"dataSize"</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="string">"dataOff"</span>: <span class="number">0</span>,   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="atom">def</span> <span class="atom">parseHeader</span>(<span class="atom">header_data</span>):</span><br><span class="line"></span><br><span class="line">        <span class="atom">header_list</span> = [<span class="atom">header_data</span>[<span class="atom">i</span>:<span class="atom">i</span>+<span class="number">4</span>] <span class="atom">for</span> <span class="atom">i</span> <span class="atom">in</span> <span class="atom">range</span>(<span class="number">32</span>,<span class="number">112</span>,<span class="number">4</span>)]</span><br><span class="line">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number">0</span>,<span class="atom">header_data</span>[<span class="number">12</span>:<span class="number">32</span>])</span><br><span class="line">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number">0</span>,<span class="atom">header_data</span>[<span class="number">8</span>:<span class="number">12</span>])</span><br><span class="line">        <span class="atom">header_list</span>.<span class="atom">insert</span>(<span class="number">0</span>,<span class="atom">header_data</span>[:<span class="number">8</span>])</span><br><span class="line"></span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'magic'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'8s'</span>,<span class="atom">header_list</span>[<span class="number">0</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="atom">if</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'magic'</span>] != <span class="string">"dex\n035\0"</span>:</span><br><span class="line">            <span class="atom">print</span> <span class="string">'invalid dex file.'</span></span><br><span class="line">            <span class="atom">exit</span>(-<span class="number">1</span>)</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'checkSum'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">1</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'signature'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'20s'</span>,<span class="atom">header_list</span>[<span class="number">2</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'fileSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">3</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'headerSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">4</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'endianTag'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">5</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'linkSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">6</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'linkOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">7</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'mapOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">8</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'stringIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">9</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'stringIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">10</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'typeIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">11</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'typeIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">12</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'protoIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">13</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'protoIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">14</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'fieldIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">15</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'fieldIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">16</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'methodIdsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">17</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'methodIdsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">18</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'classDefsSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">19</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'classDefsOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">20</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'dataSize'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">21</span>])[<span class="number">0</span>]</span><br><span class="line">        <span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="string">'dataOff'</span>] = <span class="atom">struct</span>.<span class="atom">unpack</span>(<span class="string">'I'</span>,<span class="atom">header_list</span>[<span class="number">22</span>])[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="atom">if</span> <span class="name">__name__</span> == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    <span class="atom">with</span> <span class="atom">open</span>(<span class="string">"classes.dex"</span>, <span class="string">'rb'</span>) <span class="atom">as</span> <span class="atom">f</span>:</span><br><span class="line">        <span class="atom">parseHeader</span>(<span class="atom">f</span>.<span class="atom">read</span>(<span class="number">0x70</span>))</span><br><span class="line">        <span class="atom">for</span> <span class="atom">x</span> <span class="atom">in</span> <span class="name">DexStruct</span>.<span class="name">DexHeader</span>:</span><br><span class="line">            <span class="atom">print</span> <span class="atom">x</span>, <span class="atom">hex</span>(<span class="name">DexStruct</span>.<span class="name">DexHeader</span>[<span class="atom">x</span>])</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Reference">Reference</h3><p><a href="http://www.ituring.com.cn/book/1131" target="_blank" rel="external">《Android 软件安全与逆向分析》</a></p>
<p><a href="http://www.blogfshare.com/dex-format.html" target="_blank" rel="external">Android安全–Dex文件格式详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="dex_简介">dex 简介</h3><p>dex 文件是 dalvik 虚拟机的可执行文件。</p>]]>
    
    </summary>
    
      <category term="Android 安全" scheme="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/"/>
    
      <category term="dex" scheme="http://kiya-z.github.io/tags/dex/"/>
    
      <category term="Android" scheme="http://kiya-z.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何运行 .smali 程序]]></title>
    <link href="http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/"/>
    <id>http://kiya-z.github.io/2015/11/16/how-to-run-file-ended-with-smali/</id>
    <published>2015-11-16T09:27:19.000Z</published>
    <updated>2015-11-16T09:29:57.017Z</updated>
    <content type="html"><![CDATA[<h2 id="准备_smali_程序">准备 smali 程序</h2><a id="more"></a>
<p>从 《Android 软件安全与逆向》书中抠出一段，起名为 <code>FirstSmali.smali</code> ：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.class</span><span class="keyword"> public</span> <span class="class">LFirstSmali;</span>  <span class="comment"># 定义类名</span></span><br><span class="line"><span class="keyword">.super</span> <span class="class">Ljava/lang/Object;</span>   <span class="comment"># 定义父类</span></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> static</span><span class="function"> main(</span><span class="keyword">[</span><span class="class">Ljava/lang/String;</span><span class="function">)</span>V     <span class="comment"># 声明静态方法</span></span><br><span class="line"><span class="keyword">    .registers</span> 4     <span class="comment"># 寄存器</span></span><br><span class="line">    <span class="comment">#.parameter      # 参数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .prologue</span>      <span class="comment"># 代码起始</span></span><br><span class="line">   <span class="instruction"> nop</span><br><span class="line"></span>   <span class="instruction"> nop</span><br><span class="line"></span>   <span class="instruction"> nop</span><br><span class="line"></span>   <span class="instruction"> nop</span><br><span class="line"></span>    <span class="comment">#数据定义</span></span><br><span class="line">   <span class="instruction"> const/16 </span><span class="variable">v0</span>,0x8</span><br><span class="line">   <span class="instruction"> const/4 </span><span class="variable">v1</span>,0x5</span><br><span class="line">   <span class="instruction"> const/4 </span><span class="variable">v2</span>,0x3</span><br><span class="line">    <span class="comment">#数据操作</span></span><br><span class="line">   <span class="instruction"> move </span><span class="variable">v1</span>,<span class="variable">v2</span></span><br><span class="line">    <span class="comment">#数组操作</span></span><br><span class="line">   <span class="instruction"> new-array </span><span class="variable">v0</span>,<span class="variable">v0</span>,<span class="keyword">[</span>I</span><br><span class="line">   <span class="instruction"> array-length </span><span class="variable">v1</span>,<span class="variable">v0</span></span><br><span class="line">    <span class="comment">#实例操作</span></span><br><span class="line">   <span class="instruction"> new-instance </span><span class="variable">v1</span>,<span class="class">Ljava/lang/StringBuilder;</span></span><br><span class="line">    <span class="comment">#方法调用</span></span><br><span class="line">   <span class="instruction"> invoke-direct </span>&#123;<span class="variable">v1</span>&#125;,<span class="class">Ljava/lang/StringBuilder;</span><span class="function">-&gt;&lt;init&gt;(</span><span class="function">)</span>V</span><br><span class="line">    <span class="comment">#跳转</span></span><br><span class="line">   <span class="instruction"> if-nez </span><span class="variable">v0</span>,<span class="keyword"> :cond_0</span></span><br><span class="line">   <span class="instruction"> goto </span>:goto_0</span><br><span class="line">   <span class="keyword"> :cond_0</span></span><br><span class="line">    <span class="comment">#数据转换</span></span><br><span class="line">   <span class="instruction"> int-to-float </span><span class="variable">v2</span>,<span class="variable">v2</span></span><br><span class="line">    <span class="comment">#运算</span></span><br><span class="line">   <span class="instruction"> add-float </span><span class="variable">v2</span>,<span class="variable">v2</span>,<span class="variable">v2</span></span><br><span class="line">    <span class="comment">#比较</span></span><br><span class="line">   <span class="instruction"> cmpl-float </span><span class="variable">v0</span>,<span class="variable">v2</span>,<span class="variable">v2</span></span><br><span class="line">    <span class="comment">#字段操作</span></span><br><span class="line">   <span class="instruction"> sget-object </span><span class="variable">v0</span>,<span class="class">Ljava/lang/System;</span>-&gt;out:<span class="class">Ljava/io/PrintStream;</span></span><br><span class="line">   <span class="instruction"> const-string </span><span class="variable">v1</span>,<span class="string">"Hello Smali"</span></span><br><span class="line">    <span class="comment">#调用</span></span><br><span class="line">   <span class="instruction"> invoke-virtual </span>&#123;<span class="variable">v0</span>,<span class="variable">v1</span>&#125;, <span class="class">Ljava/io/PrintStream;</span><span class="function">-&gt;println(</span><span class="class">Ljava/lang/String;</span><span class="function">)</span>V</span><br><span class="line">    <span class="comment">#返回</span></span><br><span class="line">   <span class="keyword"> :goto_0</span></span><br><span class="line">   <span class="instruction"> return-void</span><br><span class="line"></span>   <span class="instruction"> return-void </span>    <span class="comment"># 返回空</span><span class="keyword"></span><br><span class="line"></span><br><span class="line">.end method</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="编译_smali_程序">编译 smali 程序</h2><p>将 <code>.smali</code> 文件编译为 <code>.dex</code> 文件 :<br><code>java -jar smali.jar -o FirstSmali.dex FirstSmali.smali</code></p>
<hr>
<h2 id="执行_smali_程序">执行 smali 程序</h2><p>打开 <code>adb</code> 环境，连上手机，在命令行下<br>执行 <code>adb devices</code> 查看手机是否连接成功；<br>执行 <code>adb push FirstSmali.dex /sdcard/</code> 将 dex 文件推到手机上；<br>执行如下命令就 OK 了。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell dalvikvm -cp /sdcard/FirstSmali<span class="class">.dex</span> FirstSmali</span><br></pre></td></tr></table></figure></p>
<h3 id="备注">备注</h3><p><code>-cp</code> 是 <code>classpath</code>  的意思，<code>dalvikvm</code> 命令第一个参数指定类路径，第二个指定类名。</p>
<p>另外，如果想要 push 到如 <code>data/local</code> 之类的目录下是没有权限的，可以先 push 到 sdcard，进入 <code>adb shell</code> 执行 <code>su</code> 获得 root 权限之后，就可以复制到 <code>data</code> 目录了。</p>
<p>本文程序只有一个 dex 文件，多个的话需要打包为 <code>zip</code> ，将此 zip 文件作为 <code>dalvikvm</code> 的第一个参数便可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="准备_smali_程序">准备 smali 程序</h2>]]>
    
    </summary>
    
      <category term="Android 安全" scheme="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/"/>
    
      <category term="smali" scheme="http://kiya-z.github.io/tags/smali/"/>
    
      <category term="反编译" scheme="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="Android" scheme="http://kiya-z.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[校验数字签名防止 apk 被二次打包 - Java层校验（大众点评为例）]]></title>
    <link href="http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/"/>
    <id>http://kiya-z.github.io/2015/11/12/check-signature-for-avoiding-fake-app-java-level-check/</id>
    <published>2015-11-12T09:36:23.000Z</published>
    <updated>2015-11-13T06:30:44.322Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>测试环境<br>Ubuntu 14.04<br>Lenovo Android 5.1<br>Lenovo Android 4.2.2<br>Android Studio</p>
</blockquote>
<a id="more"></a>
<h2 id="普及签名包名知识">普及签名包名知识</h2><p>包名 (Package Name) 相当于「应用的身份证」，是系统用来<strong>区分不同应用</strong>的字段，重复的包名会被认为是同一款应用。<br>签名文件相当于「开发者的身份证」，目的是为了<strong>检验应用是否被人更改过</strong>（应用必须签名过才能正常安装）。</p>
<p>包名相同签名相同时，会发生 替换安装 / 应用升级；<br>包名相同签名不同时，安装失败；<br>包名不同签名相同时，相当于同一开发者的两个应用，互相不冲突。</p>
<blockquote>
<p>签名的注意事项<br>所有的Android应用都必须有数字签名，没有不存在数字签名的应用，包括模拟器上运行的。Android系统不会安装没有数字证书的应用。<br>签名的数字证书不需要权威机构来认证，是开发者自己产生的数字证书，即所谓的自签名。<br>正式发布一个Android应用时，必须使用一个合适的私钥生成的数字证书来给程序签名，不能使用ADT插件或者ANT工具生成的调试证书来发布。<br>Android将数字证书用来标识应用程序的作者和在应用程序之间建立信任关系，而不是用来决定最终用户可以安装哪些应用程序。</p>
</blockquote>
<hr>
<h2 id="为大众点评换签名">为大众点评换签名</h2><p>按照常规步骤使用 <code>apktool</code> + <code>signapk</code> 反编译、编译、签名并安装到手机上（没有修改任何代码），打开 app 选择城市后界面如下图并很快退出：</p>
<p><img src="http://7xo976.com1.z0.glb.clouddn.com/images/github-io/Android/dianping-crash.jpeg-style1" alt="dianping-crash"></p>
<p>说明点评对签名进行了校验 。</p>
<hr>
<h2 id="分析校验方法">分析校验方法</h2><h3 id="怎么退出的？">怎么退出的？</h3><p>打开 apktool 反编译得到的文件夹下的 <code>AndroidManifest.xml</code> ，得到程序包名：<code>com.dianping.v1</code> 。<br>清除大众点评的数据，打开 as，连上手机，log 的过滤条件设为 com.dianping ，在选择城市之前清一下 log ，在 log 里搜索 “die”，比较明显的是有四处：</p>
<p>进程死亡：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number">19182</span>) has died</span><br><span class="line">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number">19586</span>) has died</span><br><span class="line">Process com<span class="class">.dianping</span><span class="class">.v1</span> (pid <span class="number">19650</span>) has died</span><br></pre></td></tr></table></figure></p>
<p>app 死亡：<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Force removing ActivityRecord&#123;<span class="number">266</span>e5efd u0 com.dianping.v1/.NovaMainActivity t14010&#125;: app died, no saved <span class="keyword">state</span></span><br></pre></td></tr></table></figure></p>
<p>其中前两个进程死亡之后都有开启进程的操作，说明第一次校验失败后重试了两次：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">startProcess:</span> name=com.dianping.v1 app=<span class="literal">null</span> knownToBeDead=<span class="literal">true</span> thread=<span class="literal">null</span> pid=-<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">startProcess:</span> name=com.dianping.v1 app=<span class="literal">null</span> knownToBeDead=<span class="literal">true</span> thread=<span class="literal">null</span> pid=-<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>最后一个直接杀死了 app，没有再继续创建进程。</p>
<p>在进程结束之前，发生错误的调用记录：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.base.app.NovaActivity.setContentView(NovaActivity.java:<span class="number">722</span>)</span><br><span class="line"> <span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.setOnContentView(MainActivity.java:<span class="number">339</span>)</span><br><span class="line"> <span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.base.basic.FragmentTabActivity.onCreate(FragmentTabActivity.java:<span class="number">51</span>)</span><br><span class="line"> <span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.base.widget.NovaFragmentTabActivity.onCreate(NovaFragmentTabActivity.java:<span class="number">26</span>)</span><br><span class="line"> <span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.main.guide.MainActivity.onCreate(MainActivity.java:<span class="number">169</span>)</span><br><span class="line"> <span class="number">9586</span>-<span class="number">19586</span>/? D/AccessibilityManager:     at com.dianping.v1.NovaMainActivity.onCreate(NovaMainActivity.java:<span class="number">15</span>)</span><br></pre></td></tr></table></figure></p>
<h3 id="代码探索">代码探索</h3><p>解压 apk 文件，发现有 3 个 dex 文件，先拿第一个下手，JD-GUI 打开发现代码没有混淆！</p>
<p>调用记录中的文件从上往下过一遍，发现在 <code>com.dianping.main.guide.MainActivity.onCreate()</code> 方法中有校验签名的函数：<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="comment">(!checkSignature()</span>) &#123;    </span><br><span class="line">      Process.killProcess<span class="comment">(Process.myPid()</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p><code>checkSignature</code> 函数：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> boolean <span class="title">checkSignature</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"> <span class="keyword">try</span></span><br><span class="line"> &#123;</span><br><span class="line">   Signature[] arrayOfSignature = getPackageManager().getPackageInfo(getPackageName(), <span class="number">64</span>).signatures;     <span class="comment">//获得签名数组</span></span><br><span class="line">   <span class="keyword">if</span> (arrayOfSignature != null)</span><br><span class="line">   &#123;</span><br><span class="line">     <span class="keyword">if</span> (arrayOfSignature.length == <span class="number">0</span>) &#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">int</span> j = arrayOfSignature.length;</span><br><span class="line">     <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">     <span class="keyword">while</span> (i &lt; j)   <span class="comment">//如果数组中的某个元素值与 'ac6fc3fe' 相等，返回校验成功；如果直到结束也没有相等的元素，返回失败</span></span><br><span class="line">     &#123;               <span class="comment">//只比较一个特定的元素，可能也是为了不把整个签名泄露出来，同时也做到了一定程度的校验</span></span><br><span class="line">       String str = Integer.toHexString(arrayOfSignature[i].toCharsString().hashCode());</span><br><span class="line">       <span class="keyword">if</span> (!<span class="string">"ac6fc3fe"</span>.equalsIgnoreCase(str))   </span><br><span class="line">       &#123;</span><br><span class="line">         boolean <span class="keyword">bool</span> = <span class="string">"600cf559"</span>.equalsIgnoreCase(str);       <span class="comment">//这个比较好像没用</span></span><br><span class="line">         <span class="keyword">if</span> (!<span class="keyword">bool</span>) &#123;&#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">       &#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       i += <span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">catch</span> (Exception localException) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>相关 API：</p>
<p><code>public Signature[] signatures</code><br>Array of all signatures read from the package file. This is only filled in if the flag GET_SIGNATURES was set.</p>
<p><code>public static final int GET_SIGNATURES</code><br>PackageInfo flag: return information about the signatures included in the package.<br>Constant Value: 64 (0x00000040)</p>
<p><code>public boolean equalsIgnoreCase (String string)</code><br>Compares the given string to this string ignoring case.<br>The strings are compared one char at a time.</p>
<h3 id="流程修改">流程修改</h3><p>在 <code>smali/com/dianping/main/guide/MainActivity.smali</code> 中搜索 <code>ac6fc3fe</code> :<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.line</span> 358</span><br><span class="line"><span class="keyword">    .local</span> <span class="variable">v4</span>, <span class="string">"myHash"</span>:<span class="class">Ljava/lang/String;</span></span><br><span class="line">   <span class="instruction"> const-string </span><span class="variable">v9</span>, <span class="string">"ac6fc3fe"</span></span><br><span class="line"></span><br><span class="line">   <span class="instruction"> invoke-virtual </span>&#123;<span class="variable">v9</span>, <span class="variable">v4</span>&#125;, <span class="class">Ljava/lang/String;</span><span class="function">-&gt;equalsIgnoreCase(</span><span class="class">Ljava/lang/String;</span><span class="function">)</span>Z</span><br><span class="line"></span><br><span class="line">   <span class="instruction"> move-result </span><span class="variable">v9</span></span><br><span class="line"></span><br><span class="line">   <span class="instruction"> if-nez </span><span class="variable">v9</span>,<span class="keyword"> :cond_2</span>     <span class="function"> //if(</span>!equal(..<span class="function">)</span><span class="function">)</span><span class="instruction"> return </span>1</span><br></pre></td></tr></table></figure></p>
<p>找到 <code>con_2</code> 的定义:<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">.line</span> 359<span class="keyword"></span><br><span class="line">:cond_2</span><span class="instruction"></span><br><span class="line">const/4 </span><span class="variable">v8</span>, 0x1</span><br><span class="line"><span class="instruction"></span><br><span class="line">goto </span>:goto_0</span><br></pre></td></tr></table></figure></p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">:goto_0</span></span><br><span class="line">    <span class="keyword">return</span> v8</span><br></pre></td></tr></table></figure>
<p>所以把 <code>if-nez v9, :cond_2</code> 改成 <code>if-eqz v9, :cond_2</code> 就可以了，当然，修改方法还有很多。</p>
<h3 id="打包签名">打包签名</h3><p>点评可以正常打开，正常登录，正常使用了。</p>
<hr>
<blockquote>
<p>番外：<br>而另一台手机 (Lenovo Android 4.2.2) 测试进程会不断重新创建。<br>应用 crash 之后 App 对应的 Process 都被杀死，然后安排重启 Service，重新启动 Task 栈顶的 Activity 。</p>
</blockquote>
<hr>
<h2 id="Reference">Reference</h2><p><a href="http://www.ituring.com.cn/book/1131" target="_blank" rel="external">Android软件安全与逆向分析</a><br><a href="http://www.wandoujia.com/blog/xibaibai-diary-3" target="_blank" rel="external">洗白白手记：绕开 Android 应用开发的那些「坑」</a><br><a href="http://www.oschina.net/question/163910_27292#tags_nav" target="_blank" rel="external">给 Android 应用程序签名</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>测试环境<br>Ubuntu 14.04<br>Lenovo Android 5.1<br>Lenovo Android 4.2.2<br>Android Studio</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Android 安全" scheme="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/"/>
    
      <category term="反编译" scheme="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="Android" scheme="http://kiya-z.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android 安全工具包（持续更新）]]></title>
    <link href="http://kiya-z.github.io/2015/11/12/Android-security-tools/"/>
    <id>http://kiya-z.github.io/2015/11/12/Android-security-tools/</id>
    <published>2015-11-12T08:09:27.000Z</published>
    <updated>2015-11-16T09:55:31.861Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p><strong>工具清单</strong></p>
<ul>
<li>Apktool</li>
<li>smali &amp; baksmali</li>
<li>dex2jar</li>
<li>JD-GUI</li>
<li>signapk</li>
<li>dx &amp; ddx</li>
</ul>
</blockquote>
<p>以上工具可点击 <a href="https://github.com/kiya-z/Android/tree/master/tools" target="_blank" rel="external">这里</a> 打包下载</p>
<p><strong>本文环境：<code>Ubuntu 14.04.3 LTS 64-bit</code></strong></p>
<a id="more"></a>
<hr>
<h3 id="工具使用场景：">工具使用场景：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java-&#62;class: javac&#10;smali-&#62;dex: smali.jar&#10;class-&#62;dex: dx&#10;dex-&#62;arm: execute&#10;&#10;dex-&#62;smali: baksmali&#10;dex-&#62;class: dex2jar&#10;class-&#62;java: JD-GUI</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Apktool"><strong>Apktool</strong></h1><p>点击 <a href="http://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="external">官网</a> 下载，里面也有详细的安装步骤。</p>
<h3 id="中文步骤及注意事项">中文步骤及注意事项</h3><p>（<em>此处为 Apktool 2.x 版本</em>）</p>
<ol>
<li>右键另存 <a href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool" target="_blank" rel="external">脚本文件</a>，名为 <code>apktool</code> 。如果不能另存，打开 <a href="https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool" target="_blank" rel="external">脚本文件</a>， 复制全部内容到新建文件 <code>apktool</code> 中；</li>
<li>下载 <a href="https://bitbucket.org/iBotPeaches/apktool/downloads" target="_blank" rel="external">apktool</a>，将其重命名为 <code>apktool.jar</code> 。</li>
<li>如果是系统是 64 位，需要安装 32 位的库文件。如何安装可参考 <a href="http://stackoverflow.com/questions/23182765/how-to-install-ia32-libs-in-ubuntu-14-04-lts-trusty-tahr" target="_blank" rel="external">How to install ia32-libs in Ubuntu 14.04 LTS (Trusty Tahr)</a> . 或者直接执行以下命令：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo -<span class="tag">i</span></span><br><span class="line">cd /etc/apt/sources<span class="class">.list</span><span class="class">.d</span></span><br><span class="line">echo <span class="string">"deb http://old-releases.ubuntu.com/ubuntu/ raring main restricted universe multiverse"</span> &gt;ia32-libs-raring<span class="class">.list</span></span><br><span class="line">apt-get update</span><br><span class="line">apt-get install ia32-libs</span><br><span class="line">rm ia32-libs-raring<span class="class">.list</span> /etc/apt/sources<span class="class">.list</span><span class="class">.d</span></span><br><span class="line">apt-get update</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>执行完成可按 <code>Ctrl+D</code> 注销 root .</p>
<ol>
<li>把 <code>apktool</code> 和 <code>apktool.jar</code> 两个文件移动到 <code>usr/local/bin</code> . 此步骤需要 <code>sudo</code> .</li>
<li>为这两个文件加上可执行权限。</li>
<li>执行 <code>apktool</code> 测试效果。如果提示 <code>can&#39;t find file apktool.jar</code> ，可能是因为当前用户没有 <code>apktool.jar</code> 的读权限，试试用 <code>sudo apktool</code> 或者为其加上读权限。</li>
</ol>
<hr>
<h1 id="smali_&amp;_baksmali"><strong>smali &amp; baksmali</strong></h1><p>Apktool 中内置了 smali 和 baksmali，但我还是手痒痒的点击了 <a href="https://bitbucket.org/JesusFreke/smali/downloads" target="_blank" rel="external">下载</a> ，Aha ! 万一哪天用到了捏 ..</p>
<hr>
<h1 id="dex2jar"><strong>dex2jar</strong></h1><p>下载 <a href="https://bitbucket.org/pxb1988/dex2jar/downloads" target="_blank" rel="external">dex2jar</a> 解压，你可以选择为所有的 <code>.sh</code> 文件加上执行权限，目前我只加了 <code>d2j-dex2jar.sh</code> 和 <code>d2j_invoke.sh</code> 。如果报错找不到命令，就是因为你没有加执行权限。</p>
<hr>
<h1 id="JD-GUI"><strong>JD-GUI</strong></h1><p>去 <a href="http://jd.benow.ca/" target="_blank" rel="external">官网</a> 下载相应版本。<br>我下载的是 <code>.deb</code> 文件，安装命令为 <code>sudo dpkg -i filename</code> .</p>
<hr>
<h1 id="signapk"><strong>signapk</strong></h1><p>进行签名需要 <code>sianapk.sh</code> 、<code>signapk.jar</code> 和两个签名文件 <code>testkey.pk8</code> 、<code>testkey.x509.pem</code> 。<br><a href="https://github.com/kiya-z/Android/tree/master/tools/signapk" target="_blank" rel="external">点击下载</a></p>
<hr>
<h1 id="dx_&amp;_ddx"><strong>dx &amp; ddx</strong></h1><p><code>dx</code> 是整个编译过程的一部分，将 Java 字节码转换为 Dalvik 字节码（class 文件变成 dex 文件），<code>ddx</code> 则正好相反。<br>你可以在 SDK 中找到它们，或者 <a href="https://github.com/kiya-z/Android/tree/master/tools" target="_blank" rel="external">下载</a> 。</p>
<hr>
<blockquote>
<p>to be continued.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p><strong>工具清单</strong></p>
<ul>
<li>Apktool</li>
<li>smali &amp; baksmali</li>
<li>dex2jar</li>
<li>JD-GUI</li>
<li>signapk</li>
<li>dx &amp; ddx</li>
</ul>
</blockquote>
<p>以上工具可点击 <a href="https://github.com/kiya-z/Android/tree/master/tools">这里</a> 打包下载</p>
<p><strong>本文环境：<code>Ubuntu 14.04.3 LTS 64-bit</code></strong></p>]]>
    
    </summary>
    
      <category term="Android 安全" scheme="http://kiya-z.github.io/tags/Android-%E5%AE%89%E5%85%A8/"/>
    
      <category term="反编译" scheme="http://kiya-z.github.io/tags/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
      <category term="工具" scheme="http://kiya-z.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="Android" scheme="http://kiya-z.github.io/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Python 之 接口和多态引发的血案]]></title>
    <link href="http://kiya-z.github.io/2015/11/11/Python-a-murder-about-interface-and-polymorphism/"/>
    <id>http://kiya-z.github.io/2015/11/11/Python-a-murder-about-interface-and-polymorphism/</id>
    <published>2015-11-11T07:52:39.000Z</published>
    <updated>2015-11-11T08:23:28.367Z</updated>
    <content type="html"><![CDATA[<h1 id="事故发生地">事故发生地</h1><p>在学习<a href="http://www.maiziedu.com/course/python/545-7480/" target="_blank" rel="external"> Python 面向对象视频 之 鸭子类型与多态 </a>时看到这样两句话不得其解：</p>
<blockquote>
<p>非动态语言必须通过继承和接口实现多态<br>动态语言不需要实现接口</p>
</blockquote>
<a id="more"></a>
<hr>
<h1 id="菜鸟的问题">菜鸟的问题</h1><p>(非动态语言以 Java 为例，动态语言以 Python 为例)</p>
<ol>
<li>接口和多态是什么关系？</li>
<li>Python 为什么没有接口？没有接口怎么实现接口对应的设计模式</li>
<li>Python 为什么没有重载？</li>
<li>Python 的多态是什么样的？</li>
</ol>
<hr>
<h2 id="接口和多态是什么关系？">接口和多态是什么关系？</h2><p>  在我的理解中，多态具有两种形式，重载和重写：</p>
<blockquote>
<p><strong>重载</strong>：<em>在同一个类中</em>，相同的方法名对应着不同的方法实现，其区别在于他们需要的参数和返回值不同。<br><strong>重写</strong>：<em>用于父类和子类间</em>，子类重写父类的方法，只是对应的方法实现不同，其方法名和参数都相同。</p>
</blockquote>
<p>这样看来，重写是基于继承的。那么接口呢？好像除了强制要求子类实现某些方法，我不知道还有什么别的作用。<br>正因如此，接口只是一个规范。在多个类都实现一个接口的时候他的作用就体现出来了，我们不需要知道在某个类中这个方法的具体实现，只需要这个类中有这个方法而我们可以直接调用就可以了。有了这样一个统一的标准，我们就不必担心同样功能的方法被起了各种各样的名字了。<br>所以，我觉得可以用这么一句话回答这个问题，<strong>接口不是实现多态的，而是基于多态的，有了多态接口才能发挥作用</strong>。</p>
<hr>
<h2 id="Python_为什么没有接口？没有接口怎么实现接口对应的设计模式">Python 为什么没有接口？没有接口怎么实现接口对应的设计模式</h2><p>接口的作用就是规范，规范参数类型，返回值等等，从而使相同的调用能够实现不同的效果；并且接口也是为了用来弥补语言自己表达能力的不足，如：Java 只支持单继承，为了使类拥有更多的特性，使用了多实现来弥补。静态的语言必须全部都规定好才能正确使用。<br>而在 Python  中，变量是没有类型的，不需要事先规定，不管调用者传入什么类型的对象，被调用者就会认为那就是我所需要的对象(鸭子类型)，如果在运行时传入的对象不具备需要的属性或方法，程序会直接报错。需要实现这个方法的话，就照实现就是了，返回和形参不限制类型，比如：在创建了类的实例后，动态地给该实例加上一个函数属性。这就是动态类型的优势。<br>这种风格被称为“<strong>鸭子类型</strong>”：</p>
<blockquote>
<p>在这种风格中，一个对象有效的语义，不是由继承自特定的类或实现特定的接口，而是由”当前方法和属性的集合”决定。<br>在我想成为鸭子的时候，不是我必须真的是个鸭子，而是我的行为表现的像是个鸭子，那我就是个鸭子</p>
</blockquote>
<p>相关概念 - “<strong>鸭子测试</strong>”：</p>
<blockquote>
<p>“当看到一只鸟走起来像鸭子、游泳起来像鸭子、叫起来也像鸭子，那么这只鸟就可以被称为鸭子。”<br>“换言之，不要检查它是不是一个鸭子：检查它像不像一个鸭子地叫，等等。取决于你需要哪个像鸭子的行为的子集来使用语言。”</p>
</blockquote>
<hr>
<h2 id="Python_为什么没有重载？">Python 为什么没有重载？</h2><blockquote>
<p>函数重载主要是为了解决两个问题：</p>
<ol>
<li>可变参数类型。</li>
<li>可变参数个数。</li>
</ol>
</blockquote>
<p>另外，一个基本的设计原则是，仅仅当两个函数除了参数类型和参数个数不同以外，其功能是完全相同的，此时才使用函数重载，如果两个函数的功能其实不同，那么不应当使用重载，而应当使用一个名字不同的函数。<br><em>对于情况 1</em>，函数功能相同，但是参数类型不同，Python 如何处理？答案是根本不需要处理，因为 python 可以接受任何类型的参数，如果函数的功能相同，那么不同的参数类型在 Python 中很可能是相同的代码，没有必要做成两个不同函数。<br><em>对于情况 2</em> ，函数功能相同，但参数个数不同，Python 如何处理？大家知道，答案就是缺省参数。对那些缺少的参数设定为缺省参数即可解决问题。因为你假设函数功能相同，那么那些缺少的参数终归是需要用的。<br>好了，鉴于情况 1 跟 情况 2 都有了解决方案，Python 自然就不需要函数重载了。</p>
<hr>
<h2 id="Python_的多态是什么样的？">Python 的多态是什么样的？</h2><p>多态即多种形态，在运行时确定其状态，在编译阶段无法确定其类型，这就是多态。<br>1）Python是解释性语言。不进行预编译，因此它就只在运行时确定其状态；<br>2）Python中变量是弱类型的。在定义时不用指明其类型，它会根据需要在运行时确定变量的类型。</p>
<hr>
<blockquote>
<p>结语：一些粗浅之语，有长进再补充。</p>
</blockquote>
<hr>
<h1 id="Reference：">Reference：</h1><p><a href="http://www.zhihu.com/question/20111251" target="_blank" rel="external"> Java 中的接口有什么作用？</a><br><a href="http://www.zhihu.com/question/20685467" target="_blank" rel="external"> Python 里没有接口，如何写设计模式？</a><br><a href="http://www.zhihu.com/question/20053359" target="_blank" rel="external">为什么 Python  不支持函数重载？</a><br><a href="http://www.cnblogs.com/dolphin0520/archive/2013/04/03/2997499.html" target="_blank" rel="external"> Python面向对象编程(二)</a><br><a href="https://zh.wikipedia.org/wiki/%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B" target="_blank" rel="external">鸭子类型</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="事故发生地">事故发生地</h1><p>在学习<a href="http://www.maiziedu.com/course/python/545-7480/"> Python 面向对象视频 之 鸭子类型与多态 </a>时看到这样两句话不得其解：</p>
<blockquote>
<p>非动态语言必须通过继承和接口实现多态<br>动态语言不需要实现接口</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Python" scheme="http://kiya-z.github.io/tags/Python/"/>
    
      <category term="Python" scheme="http://kiya-z.github.io/categories/Python/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用 Github Pages + Hexo + 多说 搭建博客全过程 - 基础篇]]></title>
    <link href="http://kiya-z.github.io/2015/11/10/use-Github-Pages-Hexo-duoshuo-to-set-up-a-blog-basic-steps/"/>
    <id>http://kiya-z.github.io/2015/11/10/use-Github-Pages-Hexo-duoshuo-to-set-up-a-blog-basic-steps/</id>
    <published>2015-11-10T03:27:33.000Z</published>
    <updated>2015-11-10T10:09:04.030Z</updated>
    <content type="html"><![CDATA[<p>看了很多博客，最后发现官方文档才是最可靠的！谨记！<br>本文只是自己尝试过程的记录，并非全部搭建方法。<br>&lt; 假设 git 已安装，Github 已注册 &gt;</p>
<blockquote>
<p>搭建环境：<br>os: Ubuntu 14.04.3 LTS<br>node: 4.2.2<br>hexo: 3.1.1<br>hexo theme: NexT<br>git: 1.9.1</p>
</blockquote>
<a id="more"></a>
<hr>
<h2 id="Step_1_安装_Node-js">Step 1 安装 Node.js</h2><ul>
<li>从<a href="https://nodejs.org/en/download/" target="_blank" rel="external">官网</a>下载系统对应的源码</li>
<li>依次执行以下命令解压编译安装<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf <span class="keyword">node</span><span class="identifier"></span><span class="title">-v4</span>.<span class="number">2.2</span>.tar.gz</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="Step_2_安装_Hexo">Step 2 安装 Hexo</h2><ul>
<li>执行以下命令<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="Step_3_搭建本地博客">Step 3 搭建本地博客</h2><ul>
<li><p>初始化一枚目录存放博客, 进入</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">hexo</span> init <span class="keyword">blog</span><br><span class="line"></span><span class="label">cd</span> <span class="keyword">blog</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>此时一个默认主题默认配置的 Hexo 博客就搭建完成了</p>
<ul>
<li><p>安装 Hexo 关于启动服务器的插件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>启动服务器, 本地查看效果, 如果不指定端口，默认为4000</p>
<figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">server</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>打开 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> 查看效果</p>
</li>
<li>使用 <strong>Ctrl+c</strong> 停止服务</li>
</ul>
<hr>
<h2 id="Step_4_主题和配置">Step 4 主题和配置</h2><p>在 <a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a> 选择某个喜欢的主题，以 NexT 为例，假设当前目录为 “blog”。</p>
<ul>
<li>前往<a href="https://github.com/iissnan/hexo-theme-next/releases" target="_blank" rel="external">NexT主题发布页面</a>下载主题的压缩包<br>(这是 Next 的稳定版本，我试用了最新版本，有一些问题故转为稳定版本)</li>
<li>解压并将目录更名为next</li>
<li>将 next 移动至 <strong>blog/themes/</strong> 目录下</li>
<li>将 blog 目录下的 <strong>_config.yml</strong> 文件中的 theme 属性值改为 next</li>
<li>此时主题更换成功，可启动 server 验证效果</li>
<li>对于 _config.yml 中的其他属性可根据情况自行修改，基本的有<figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">title</span>: <span class="string">网站大标题</span></span><br><span class="line"><span class="attribute">subtitle</span>: <span class="string">网站小标题</span></span><br><span class="line"><span class="attribute">description</span>: <span class="string">你对于自己的描述</span></span><br><span class="line"><span class="attribute">author</span>: <span class="string">昵称</span></span><br><span class="line"><span class="attribute">avatar</span>: <span class="string">头像 (如:/images/avatar.jpg, images目录位于source目录下)</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="Step_5_Github_的操作">Step 5 Github 的操作</h2><ul>
<li>新建仓库名为 <strong>github用户名.github.io</strong><br>进入仓库，点击右侧 settings，在 Github Pages 标签下可看到  <em>Your site is published at <a href="http://你的用户名.github.io" target="_blank" rel="external">http://你的用户名.github.io</a>.</em> 这句话。 这时便可直接访问，如我的就是 <a href="http://kiya-z.github.io">kiya-z.github.io</a>.</li>
</ul>
<hr>
<h2 id="Step_6_将博客部署到Github">Step 6 将博客部署到Github</h2><ul>
<li><p>安装 hexo 关于 git 的组件</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在_config.yml 中为 git 添加配置</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">    <span class="attribute">type</span>: git</span><br><span class="line">    <span class="attribute">repository</span>: 你的仓库地址(<span class="attribute">https</span>:<span class="comment">//github.com/用户名/用户名.github.io.git)</span></span><br><span class="line">    <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行(每次修改都要执行这些命令才能在github pages看到效果)</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>输入 github 的用户名和密码，部署完成之后访问你的如 <a href="http://kiya-z.github.io">kiya-z.github.io</a> 的网址即可看到和本地一样的效果。</p>
<hr>
<h2 id="Step_7_关于写博客">Step 7 关于写博客</h2><ul>
<li><p>新建博客</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"文章名"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用编辑器写好文章后执行生成+部署(那两个～)</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">hexo</span> generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure>
</li>
<li><p>删除文章<br>直接删掉 <em>source/_post</em> 下对应文章的文件，然后重新生成+部署即可。有时可能要多刷新几次才能看到效果。</p>
</li>
</ul>
<hr>
<h2 id="Step_8_评论系统">Step 8 评论系统</h2><ul>
<li>登录 <a href="http://duoshuo.com/" target="_blank" rel="external">http://duoshuo.com/</a> 点击我要安装，创建站点。站点地址是 Github Pages 的地址，多说域名自己填写。</li>
<li>由于 NexT 主题已经支持了多说，我们不需要添加其他代码，只需要在 <strong>_config.yml</strong> 中添加一个名为 <strong>duoshuo_shortname</strong> 的字段，其值为<strong>多说域名中自己填写的那部分</strong>，并不是全部多说域名。</li>
</ul>
<hr>
<blockquote>
<p>结语：欢迎指正交流。Aha～</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>看了很多博客，最后发现官方文档才是最可靠的！谨记！<br>本文只是自己尝试过程的记录，并非全部搭建方法。<br>&lt; 假设 git 已安装，Github 已注册 &gt;</p>
<blockquote>
<p>搭建环境：<br>os: Ubuntu 14.04.3 LTS<br>node: 4.2.2<br>hexo: 3.1.1<br>hexo theme: NexT<br>git: 1.9.1</p>
</blockquote>]]>
    
    </summary>
    
      <category term="Github" scheme="http://kiya-z.github.io/tags/Github/"/>
    
      <category term="Hexo" scheme="http://kiya-z.github.io/tags/Hexo/"/>
    
      <category term="Cool" scheme="http://kiya-z.github.io/categories/Cool/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://kiya-z.github.io/2015/11/09/hello-world/"/>
    <id>http://kiya-z.github.io/2015/11/09/hello-world/</id>
    <published>2015-11-09T03:11:11.000Z</published>
    <updated>2015-11-10T09:13:09.726Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>]]>
    
    </summary>
    
  </entry>
  
</feed>
